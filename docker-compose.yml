version: "3"

services:
  traefik:
    image: traefik:v2.2
    container_name: traefik

    restart: always
    networks:
      - "iotstack"
    ports:
      - "80:80"
      # HTTPS
      - "443:443"
      - "8088:8088"
      # MQTT
      - "8883:8883"
    depends_on:
      # Let every other service start before traefik
      - mosquitto
      - grafana
      - influxdb
      - telegraf
    volumes:
      # Traefik Static Configuration
      - ./traefik/traefik.toml:/etc/traefik/traefik.toml
      - ./traefik/log/access.log:/log/access.log
      # Traefik Dynamic Configuration
      - ./traefik/configurations:/etc/traefik/configurations
      # SSL Certificates
      - "./letsencrypt:/letsencrypt"
      # Docker Provider via Socket
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-router=api-router@file"
      - "traefik.http.routers.traefik-http-router.service=api@internal"
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    env_file: iotstack.env
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      - "iotstack"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.influxdb-router=influxdb-router@file"
      - "traefik.http.routers.influxdb-router.service=influxdb@file"

  mosquitto:
    image: eclipse-mosquitto:2-openssl
    container_name: mosquitto
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/log:/mosquitto/log
      - ./mosquitto/data:/mosquitto/data
    user: "${USER_ID}:${GRP_ID}"
    expose:
      - 8883
      - 9001
    links:
      - telegraf
    restart: always
    networks:
      - "iotstack"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mqtt-router=mqtt-router@file"

      # TCP Routers for MQTT and Websockets
      - "traefik.tcp.routers.mqtt-router=mqtt-router@file"
      # TCP Services for MQTT and Websockets
      - "traefik.tcp.services.mosquitto=mosquitto@file"
      - "traefik.http.services.mosquitto-ws=mosquitto-ws@file"

  cedalo:
    image: cedalo/management-center:2
    container_name: cedalo
    expose:
      - 8088
    depends_on:
      - mosquitto
    networks:
      - "iotstack"
    environment:
      CEDALO_MC_BROKER_ID: mosquitto-2.0
      CEDALO_MC_BROKER_NAME: Mosquitto 2.0
      CEDALO_MC_BROKER_URL: mqtt://mosquitto:8883
      CEDALO_MC_BROKER_USERNAME: cedalo
      CEDALO_MC_BROKER_PASSWORD: Ps0fH0I5Fp
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cedalo-router=cedalo-router@file"
      - "traefik.http.routers.cedalo-router.service=cedalo@file"

  telegraf:
    image: telegraf:1.16
    container_name: telegraf
    links:
      - influxdb
    env_file: iotstack.env
    volumes:
      - ./telegraf/telegraf.toml:/etc/telegraf/telegraf.conf:ro
    networks:
      - "iotstack"
    labels:
      - "traefik.enable=false"

  grafana:
    image: grafana/grafana:7.1.0
    container_name: grafana
    env_file: iotstack.env
    user: "472"
    links:
      - influxdb
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - "iotstack"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana-router=grafana-router@file"
      - "traefik.http.routers.grafana-router.service=grafana@file"

volumes:
  influxdb_data:
  grafana_data:

networks:
  iotstack:
    external: true
